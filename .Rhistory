grade -> 3.1
3.1 -> grade
3.2 -> grade
5 > 4
good 5 > 4
good -> 5 > 4
5 > 4 -> good
`max_puppies`, which is the number of puppies you can
# afford for $1,000
`max_puppies`, which is the number of puppies you can
# afford for $1,000
`max_puppies', which is the number of puppies you can
# afford for $1,000
# Create a boolean variable `too_expensive`, set to TRUE if the cost is greater
# than $1,000
total_cost > 1000 -> too_expensive
# Create a variable `hometown` that stores the city in which you were born
Seattle -> howetown
# Create a variable `hometown` that stores the city in which you were born
'Seattle' -> howetown
# Create a variable `hometown` that stores the city in which you were born
'Seattle' -> howetown
# Create a variable `hometown` that stores the city in which you were born
'Seattle' -> howetown
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
# Create a variable `hometown` that stores the city in which you were born
'Seattle' -> howetown
# Create a variable `hometown` that stores the city in which you were born
'Seattle' -> howetown
# Create a variable `hometown` that stores the city in which you were born
'Seattle' -> howetown
# Create a variable `hometown` that stores the city in which you were born
'Seattle' -> howetown
# Create a variable `puppies` equal to the number of puppies you'd like to have
10 -> puppies
# Create a variable `total_cost` that has the total cost of all of your puppies
1200 -> total_cost
# Create a variable `hometown` that stores the city in which you were born
'Seattle' -> howetown
# Assign your name to the variable `my_name`
'Martin' -> my_name
# Create a variable `puppies` equal to the number of puppies you'd like to have
10 -> puppies
# Create a variable `total_cost` that has the total cost of all of your puppies
1200 -> total_cost
# Create a boolean variable `too_expensive`, set to TRUE if the cost is greater
# than $1,000
total_cost > 1000 -> too_expensive
# Create a variable `max_puppies', which is the number of puppies you can
# Create a variable `max_puppies', which is the number of puppies you can
# afford for $1,000
# Create a variable `max_puppies', which is the number of puppies you can
# afford for $1,000
# Create a variable `max_puppies', which is the number of puppies you can
# afford for $1,000
# Create a variable `max_puppies', which is the number of puppies you can
# afford for $1,000
# Create a variable `max_puppies', which is the number of puppies you can
# afford for $1,000
install.packages(carData)
install.packages("carData")
nrow(Florida[Florida$GORE > Florida$BUSH,])
library(carData)
nrow(Florida[Florida$GORE > Florida$BUSH,])
nrow(Florida[,Florida$GORE > Florida$BUSH])
Florida[Florida$GORE > Florida$BUSH,]
nrow(Florida[GORE > BUSH,])
rownames(Florida[Florida$Total == max(Florida$Total),])
rownames(Florida$Total[Florida$Total == max(Florida$Total),])
View(Florida)
colSums(Filter(is.numeric, people[Florida$GORE > Florida$BUSH,]))
colSums(Filter(is.numeric, Florida[Florida$GORE > Florida$BUSH,]))
colSums(Florida[Florida$GORE > Florida$BUSH,])
colSums(Florida$NADER[Florida$GORE > Florida$BUSH,])
colSums(Florida$NADER[Florida$GORE > Florida$BUSH,])
sum(Florida$NADER[Florida$GORE > Florida$BUSH,])
?colSums
colSums(Florida[Florida$GORE > Florida$BUSH,])
nextBechdel_castGender <- read.csv("~/Downloads/next-bechdel/nextBechdel_castGender.csv")
View(nextBechdel_castGender)
install.packages(c("nycflights13", "gapminder", "Lahman"))
setwd("~/Documents/uwgpa")
setwd("~/Documents/uwgpa")
# The file contains the third chart of our midpoint deliverable.
# It demonstrates the relationship between average GPA and student enrolled for INFO courses.
# hover_information = course_id, course_title, avg_student, avg_gpa, first_offered, last_offered
df <- read.csv("data/uw_courses.csv", stringsAsFactors = F)
source('~/Documents/uwgpa/scatterplot.R')
##########Section 2 Function##########
# The course with most 4.0 in percentage.
most_four_course <- pull(df %>%
filter(dept_abbrev == "INFO") %>%
arrange(course_no) %>%
mutate(course_id = paste0(dept_abbrev, " ", course_no),
term = factor(term, levels = c("Autumn", "Winter", "Spring", "Summer")),
term = as.character(term)) %>%
select(course_id, course_title, section_id, term, year, A, student_count) %>%
group_by(course_id, course_title) %>%
summarise(A_percentage =
(sum(suppressWarnings(as.numeric(A)), na.rm = T) /
sum(suppressWarnings(as.numeric(student_count)), na.rm = T) * 100)) %>%
ungroup() %>%
ungroup() %>%
filter(A_percentage == max(A_percentage)) %>%
select(course_id))
source('~/Documents/uwgpa/scatterplot.R')
##########Section 2 Function##########
# The course with most 4.0 in percentage.
most_four_course <- pull(df %>%
filter(dept_abbrev == "INFO") %>%
arrange(course_no) %>%
mutate(course_id = paste0(dept_abbrev, " ", course_no),
term = factor(term, levels = c("Autumn", "Winter", "Spring", "Summer")),
term = as.character(term)) %>%
select(course_id, course_title, section_id, term, year, A, student_count) %>%
group_by(course_id, course_title) %>%
summarise(A_percentage =
(sum(suppressWarnings(as.numeric(A)), na.rm = T) /
sum(suppressWarnings(as.numeric(student_count)), na.rm = T) * 100)) %>%
ungroup() %>%
ungroup() %>%
filter(A_percentage == max(A_percentage)) %>%
select(course_id))
View(third_chart)
chart2 <- third_chart(df)
third_chart(df)
