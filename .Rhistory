mutate(new_lastname=paste0(lastname,", ",student_count," student(s),",", Avg. GPA =", avg_gpa)) %>%
group_by(new_lastname) %>%
summarize(firstname=firstname[1],
student_count=sum(as.numeric(student_count)),
section=n(),
A=sum(as.numeric(A),na.rm = TRUE),
Am=sum(as.numeric(Aminus),na.rm = TRUE),
Bp=sum(as.numeric(Bplus),na.rm = TRUE),
B=sum(as.numeric(B),na.rm = TRUE),
Bm=sum(as.numeric(Bminus),na.rm = TRUE),
Cp=sum(as.numeric(Cplus),na.rm = TRUE),
C=sum(as.numeric(C),na.rm = TRUE),
Cm=sum(as.numeric(Cminus),na.rm = TRUE),
Dp=sum(as.numeric(Dplus),na.rm = TRUE),
D=sum(as.numeric(D),na.rm = TRUE),
Dm=sum(as.numeric(Dminus),na.rm = TRUE),
Failed=sum(as.numeric(Fail),na.rm = TRUE),
Withdrawl=sum(as.numeric(W),na.rm = TRUE),
grade_point_total = sum(gp)) %>%
mutate(avg_gpa = round(grade_point_total /student_count,2)) %>%
rowwise() %>%
mutate(count=sum(A,B,C,D,Failed,Withdrawl,Am,Bm,Cm,Dm,Bp,Cp,Dp, na.rm = TRUE)) %>%
mutate(st=student_count)
info2000 <- info200 %>%
mutate(new_lastname=paste0(lastname,", ",student_count," students,","Avg. GPA", avg_gpa)) %>%
group_by(new_lastname) %>%
summarize(firstname=firstname[1],
student_count=sum(as.numeric(student_count)),
section=n(),
A=sum(as.numeric(A),na.rm = TRUE),
Am=sum(as.numeric(Aminus),na.rm = TRUE),
Bp=sum(as.numeric(Bplus),na.rm = TRUE),
B=sum(as.numeric(B),na.rm = TRUE),
Bm=sum(as.numeric(Bminus),na.rm = TRUE),
Cp=sum(as.numeric(Cplus),na.rm = TRUE),
C=sum(as.numeric(C),na.rm = TRUE),
Cm=sum(as.numeric(Cminus),na.rm = TRUE),
Dp=sum(as.numeric(Dplus),na.rm = TRUE),
D=sum(as.numeric(D),na.rm = TRUE),
Dm=sum(as.numeric(Dminus),na.rm = TRUE),
Failed=sum(as.numeric(Fail),na.rm = TRUE),
Withdrawl=sum(as.numeric(W),na.rm = TRUE),
grade_point_total = sum(gp)) %>%
mutate(avg_gpa = round(grade_point_total /student_count,2)) %>%
rowwise() %>%
mutate(count=sum(A,B,C,D,Failed,Withdrawl,Am,Bm,Cm,Dm,Bp,Cp,Dp, na.rm = TRUE)) %>%
mutate(st=student_count)
info2000 <- info200 %>%
mutate(new_lastname=paste0(lastname,", ",student_count," students,"," Avg. GPA", avg_gpa)) %>%
group_by(new_lastname) %>%
summarize(firstname=firstname[1],
student_count=sum(as.numeric(student_count)),
section=n(),
A=sum(as.numeric(A),na.rm = TRUE),
Am=sum(as.numeric(Aminus),na.rm = TRUE),
Bp=sum(as.numeric(Bplus),na.rm = TRUE),
B=sum(as.numeric(B),na.rm = TRUE),
Bm=sum(as.numeric(Bminus),na.rm = TRUE),
Cp=sum(as.numeric(Cplus),na.rm = TRUE),
C=sum(as.numeric(C),na.rm = TRUE),
Cm=sum(as.numeric(Cminus),na.rm = TRUE),
Dp=sum(as.numeric(Dplus),na.rm = TRUE),
D=sum(as.numeric(D),na.rm = TRUE),
Dm=sum(as.numeric(Dminus),na.rm = TRUE),
Failed=sum(as.numeric(Fail),na.rm = TRUE),
Withdrawl=sum(as.numeric(W),na.rm = TRUE),
grade_point_total = sum(gp)) %>%
mutate(avg_gpa = round(grade_point_total /student_count,2)) %>%
rowwise() %>%
mutate(count=sum(A,B,C,D,Failed,Withdrawl,Am,Bm,Cm,Dm,Bp,Cp,Dp, na.rm = TRUE)) %>%
mutate(st=student_count)
info2000 <- info200 %>%
mutate(new_lastname=paste0(lastname,", ",student_count," students,"," Avg. GPA ", avg_gpa)) %>%
group_by(new_lastname) %>%
summarize(firstname=firstname[1],
student_count=sum(as.numeric(student_count)),
section=n(),
A=sum(as.numeric(A),na.rm = TRUE),
Am=sum(as.numeric(Aminus),na.rm = TRUE),
Bp=sum(as.numeric(Bplus),na.rm = TRUE),
B=sum(as.numeric(B),na.rm = TRUE),
Bm=sum(as.numeric(Bminus),na.rm = TRUE),
Cp=sum(as.numeric(Cplus),na.rm = TRUE),
C=sum(as.numeric(C),na.rm = TRUE),
Cm=sum(as.numeric(Cminus),na.rm = TRUE),
Dp=sum(as.numeric(Dplus),na.rm = TRUE),
D=sum(as.numeric(D),na.rm = TRUE),
Dm=sum(as.numeric(Dminus),na.rm = TRUE),
Failed=sum(as.numeric(Fail),na.rm = TRUE),
Withdrawl=sum(as.numeric(W),na.rm = TRUE),
grade_point_total = sum(gp)) %>%
mutate(avg_gpa = round(grade_point_total /student_count,2)) %>%
rowwise() %>%
mutate(count=sum(A,B,C,D,Failed,Withdrawl,Am,Bm,Cm,Dm,Bp,Cp,Dp, na.rm = TRUE)) %>%
mutate(st=student_count)
info2000<-add_row(info2000, lastname="All Sections", firstname='',
student_count=sum(info2000$student_count),
section=sum(info2000$section),
A=sum(info2000$A),
Am=sum(info2000$Am),
Bp=sum(info2000$Bp),
B=sum(info2000$B),
Bm=sum(info2000$Bm),
Cp=sum(info2000$Cp),
C=sum(info2000$C),
Cm=sum(info2000$Cm),
Dp=sum(info2000$Dp),
D=sum(info2000$D),
Dm=sum(info2000$Dm),
Failed=sum(info2000$Failed),
Withdrawl=sum(info2000$Withdrawl),
grade_point_total=sum(info2000$grade_point_total),
avg_gpa= round(grade_point_total / student_count,2)
)
plot_data <- info2000 %>%
select(lastname, A,Am,Bp,B,Bm,Cp,C,Cm,Dp,D,Dm,Failed,Withdrawl) %>%
gather(key=Grade,value=GPA,-lastname)
info2000 <- info200 %>%
group_by(lastname) %>%
summarize(firstname=firstname[1],
student_count=sum(as.numeric(student_count)),
section=n(),
A=sum(as.numeric(A),na.rm = TRUE),
Am=sum(as.numeric(Aminus),na.rm = TRUE),
Bp=sum(as.numeric(Bplus),na.rm = TRUE),
B=sum(as.numeric(B),na.rm = TRUE),
Bm=sum(as.numeric(Bminus),na.rm = TRUE),
Cp=sum(as.numeric(Cplus),na.rm = TRUE),
C=sum(as.numeric(C),na.rm = TRUE),
Cm=sum(as.numeric(Cminus),na.rm = TRUE),
Dp=sum(as.numeric(Dplus),na.rm = TRUE),
D=sum(as.numeric(D),na.rm = TRUE),
Dm=sum(as.numeric(Dminus),na.rm = TRUE),
Failed=sum(as.numeric(Fail),na.rm = TRUE),
Withdrawl=sum(as.numeric(W),na.rm = TRUE),
grade_point_total = sum(gp)) %>%
mutate(avg_gpa = round(grade_point_total /student_count,2)) %>%
rowwise() %>%
mutate(count=sum(A,B,C,D,Failed,Withdrawl,Am,Bm,Cm,Dm,Bp,Cp,Dp, na.rm = TRUE)) %>%
mutate(st=student_count)
info2000<-add_row(info2000, lastname="All Sections", firstname='',
student_count=sum(info2000$student_count),
section=sum(info2000$section),
A=sum(info2000$A),
Am=sum(info2000$Am),
Bp=sum(info2000$Bp),
B=sum(info2000$B),
Bm=sum(info2000$Bm),
Cp=sum(info2000$Cp),
C=sum(info2000$C),
Cm=sum(info2000$Cm),
Dp=sum(info2000$Dp),
D=sum(info2000$D),
Dm=sum(info2000$Dm),
Failed=sum(info2000$Failed),
Withdrawl=sum(info2000$Withdrawl),
grade_point_total=sum(info2000$grade_point_total),
avg_gpa= round(grade_point_total / student_count,2)
)
plot_data <- info2000 %>%
select(lastname, A,Am,Bp,B,Bm,Cp,C,Cm,Dp,D,Dm,Failed,Withdrawl) %>%
gather(key=Grade,value=GPA,-lastname)
final_plot<-ggplot(plot_data) +
geom_col(mapping = aes(x = lastname, y = GPA, fill = Grade), position = "fill") +
scale_y_continuous(sec.axis = sec_axis(~ . *4 )) +
labs(title = "Grade disparity between INFO 200 sections at UW",subtitle = "Average GPA", x = "Prof. last name", y = "Grade Percentage", color = "Grade") +
coord_flip()
final_plot
ggplotly(final_plot)
source('~/Desktop/info/uwgpa/boxplot_chart.R')
plot_data <- class %>%
select(lastname, A,Am,Bp,B,Bm,Cp,C,Cm,Dp,D,Dm,Failed,Withdrawl) %>%
gather(key=Grade,value=GPA,-lastname)
final_plot<-ggplot(plot_data) +
geom_col(mapping = aes(x = lastname, y = GPA, fill = Grade), position = "fill") +
scale_y_continuous(sec.axis = sec_axis(~ . *4 )) +
labs(title = "Grade disparity between INFO 200 sections at UW",subtitle = "Average GPA", x = "Prof. last name", y = "Grade Percentage", color = "Grade") +
coord_flip()
ggplotly(final_plot)
class <- compute(df, 'INFO', '200') %>%
group_by(lastname) %>%
summarize(firstname=firstname[1],
student_count=sum(as.numeric(student_count)),
section=n(),
A=sum(as.numeric(A),na.rm = TRUE),
Am=sum(as.numeric(Aminus),na.rm = TRUE),
Bp=sum(as.numeric(Bplus),na.rm = TRUE),
B=sum(as.numeric(B),na.rm = TRUE),
Bm=sum(as.numeric(Bminus),na.rm = TRUE),
Cp=sum(as.numeric(Cplus),na.rm = TRUE),
C=sum(as.numeric(C),na.rm = TRUE),
Cm=sum(as.numeric(Cminus),na.rm = TRUE),
Dp=sum(as.numeric(Dplus),na.rm = TRUE),
D=sum(as.numeric(D),na.rm = TRUE),
Dm=sum(as.numeric(Dminus),na.rm = TRUE),
Failed=sum(as.numeric(Fail),na.rm = TRUE),
Withdrawl=sum(as.numeric(W),na.rm = TRUE),
grade_point_total = sum(gp)) %>%
mutate(avg_gpa = round(grade_point_total /student_count,2)) %>%
rowwise() %>%
mutate(count=sum(A,B,C,D,Failed,Withdrawl,Am,Bm,Cm,Dm,Bp,Cp,Dp, na.rm = TRUE)) %>%
mutate(st=student_count) %>%
add_row(class, lastname="All Sections", firstname='',
student_count=sum(class$student_count),
section=sum(class$section),
A=sum(class$A),
Am=sum(class$Am),
Bp=sum(class$Bp),
B=sum(class$B),
Bm=sum(class$Bm),
Cp=sum(class$Cp),
C=sum(class$C),
Cm=sum(class$Cm),
Dp=sum(class$Dp),
D=sum(class$D),
Dm=sum(class$Dm),
Failed=sum(class$Failed),
Withdrawl=sum(class$Withdrawl),
grade_point_total=sum(class$grade_point_total),
avg_gpa= round(grade_point_total / student_count,2)
)
class <- compute(df, 'INFO', '200') %>%
group_by(lastname) %>%
summarize(firstname=firstname[1],
student_count=sum(as.numeric(student_count)),
section=n(),
A=sum(as.numeric(A),na.rm = TRUE),
Am=sum(as.numeric(Aminus),na.rm = TRUE),
Bp=sum(as.numeric(Bplus),na.rm = TRUE),
B=sum(as.numeric(B),na.rm = TRUE),
Bm=sum(as.numeric(Bminus),na.rm = TRUE),
Cp=sum(as.numeric(Cplus),na.rm = TRUE),
C=sum(as.numeric(C),na.rm = TRUE),
Cm=sum(as.numeric(Cminus),na.rm = TRUE),
Dp=sum(as.numeric(Dplus),na.rm = TRUE),
D=sum(as.numeric(D),na.rm = TRUE),
Dm=sum(as.numeric(Dminus),na.rm = TRUE),
Failed=sum(as.numeric(Fail),na.rm = TRUE),
Withdrawl=sum(as.numeric(W),na.rm = TRUE),
grade_point_total = sum(gp)) %>%
mutate(avg_gpa = round(grade_point_total /student_count,2)) %>%
rowwise() %>%
mutate(count=sum(A,B,C,D,Failed,Withdrawl,Am,Bm,Cm,Dm,Bp,Cp,Dp, na.rm = TRUE)) %>%
mutate(st=student_count) %>%
add_row(class, lastname="All Sections", firstname='',
student_count=sum(class$student_count),
section=sum(class$section),
A=sum(class$A),
Am=sum(class$Am),
Bp=sum(class$Bp),
B=sum(class$B),
Bm=sum(class$Bm),
Cp=sum(class$Cp),
C=sum(class$C),
Cm=sum(class$Cm),
Dp=sum(class$Dp),
D=sum(class$D),
Dm=sum(class$Dm),
Failed=sum(class$Failed),
Withdrawl=sum(class$Withdrawl),
grade_point_total=sum(class$grade_point_total),
avg_gpa= round(grade_point_total / student_count,2)
)
class<-add_row(class, lastname="All Sections", firstname='',
student_count=sum(class$student_count),
section=sum(class$section),
A=sum(class$A),
Am=sum(class$Am),
Bp=sum(class$Bp),
B=sum(class$B),
Bm=sum(class$Bm),
Cp=sum(class$Cp),
C=sum(class$C),
Cm=sum(class$Cm),
Dp=sum(class$Dp),
D=sum(class$D),
Dm=sum(class$Dm),
Failed=sum(class$Failed),
Withdrawl=sum(class$Withdrawl),
grade_point_total=sum(class$grade_point_total),
avg_gpa= round(grade_point_total / student_count,2)
)
plot_data <- class %>%
select(lastname, A,Am,Bp,B,Bm,Cp,C,Cm,Dp,D,Dm,Failed,Withdrawl) %>%
gather(key=Grade,value=GPA,-lastname)
final_plot<-ggplot(plot_data) +
geom_col(mapping = aes(x = lastname, y = GPA, fill = Grade), position = "fill") +
scale_y_continuous(sec.axis = sec_axis(~ . *4 )) +
labs(title = "Grade disparity between INFO 200 sections at UW",subtitle = "Average GPA", x = "Prof. last name", y = "Grade Percentage", color = "Grade") +
coord_flip()
ggplotly(final_plot)
source('~/Desktop/info/uwgpa/boxplot_chart.R')
final_plot<-ggplotly(final_plot)
# 120.
# Lastly for the upper division courses, their size are kept small to
# around 30 as well but with a few more exceptions: INFO 450, 470, 490,
# 491, which have an average class size ranging from 68 to all the way
# to 139.
# The average GPAs for INFO courses are between 3.3 to 3.9, where the
# least value is held by INFO 180, 344, 447, 461 and the most is held
# by INFO 365 and 491.
##########Section 2 Function##########
# The course with most 4.0 in percentage.
most_four_course <- pull(df %>%
filter(dept_abbrev == "INFO") %>%
arrange(course_no) %>%
mutate(course_id = paste0(dept_abbrev, " ", course_no),
term = factor(term, levels = c("Autumn", "Winter", "Spring", "Summer")),
term = as.character(term)) %>%
select(course_id, course_title, section_id, term, year, A, student_count) %>%
group_by(course_id, course_title) %>%
summarise(A_percentage =
(sum(suppressWarnings(as.numeric(A)), na.rm = T) /
sum(suppressWarnings(as.numeric(student_count)), na.rm = T) * 100)) %>%
ungroup() %>%
ungroup() %>%
filter(A_percentage == max(A_percentage)) %>%
select(course_id))
source('~/Desktop/info/uwgpa/scatterplot.R')
third_chart(df)
source("./wf_analysis.R")
chart2
source('~/Desktop/info/uwgpa/wf_analysis.R')
# plot the chart
ggplot(courses) +
geom_col(mapping = aes(x = reorder(course, fail_w_rate), y = fail_w_rate)) +
coord_flip() +
labs(
title = "Course fails / withdraw rate",
x = "Course name",
y = "Percentage of fails/withdraw students %"
)
# plot the chart
chart1 <- ggplot(courses) +
geom_col(mapping = aes(x = reorder(course, fail_w_rate), y = fail_w_rate)) +
coord_flip() +
labs(
title = "Course fails / withdraw rate",
x = "Course name",
y = "Percentage of fails/withdraw students %"
)
test <- df %>%
filter(dept_abbrev=='MUSIC') %>%
filter(course_no=='116')
View(test)
test2 <- df %>%
filter(lastname=='Sarah Elizabeth')
test2 <- df %>%
filter(lastname=='Kolat')
View(test2)
test2 <- df %>%
filter(lastname=='Rodriguez')
View(test2)
test <- df %>%
filter(dept_abbrev=='MUSIC') %>%
filter(course_no=='185')
View(test)
test <- df %>%
filter(dept_abbrev=='MUSIC') %>%
filter(course_no=='116')
test <- df %>%
filter(dept_abbrev=='MUSIC') %>%
filter(course_no=='185')
test2 <- df %>%
filter(lastname=='Clausen')
test2 <- df %>%
filter(lastname=='Levin-Richardson')
test3 <- df %>%
filter(course_title=='POMPEII')
View(test3)
test2 <- df %>%
filter(lastname=='Clausen')
test3 <- df %>%
filter(course_title=='20TH C ARCHITECTURE')
test2 <- df %>%
filter(lastname=='reinhold')
test <- df %>%
filter(dept_abbrev=='ARCH') %>%
filter(course_no=='410')
test <- df %>%
filter(dept_abbrev=='CLS') %>%
filter(course_no=='101')
test <- df %>%
filter(dept_abbrev=='CLAS') %>%
filter(course_no=='101')
test4 <- df %>%
filter(dept_abbrev=='CMS') %>%
filter(course_no=='321')
View(test4)
test3 <- df %>%
filter(course_title=='POMPEII')
test2 <- df %>%
filter(lastname=='Finn')
test <- df %>%
filter(dept_abbrev=='INFO') %>%
filter(course_no=='350')
test <- df %>%
filter(dept_abbrev=='INFO') %>%
filter(course_no=='360')
test4 <- df %>%
filter(dept_abbrev=='ARCH') %>%
filter(course_no=='457')
test3 <- df %>%
filter(course_title=='KONA L SHEN')
test3 <- df %>%
filter(course_title=='20TH C ARCHITECTURE')
test <- df %>%
filter(dept_abbrev=='CLAS') %>%
filter(course_no=='101')
test <- df %>%
filter(dept_abbrev=='MUSIC') %>%
filter(course_no=='116')
test <- df %>%
filter(dept_abbrev=='MUSIC') %>%
filter(course_no=='116') %>%
filter(year=='2017'|year=='2018'|year=='2019')
select(year & term &course_code)
test <- df %>%
filter(dept_abbrev=='MUSIC') %>%
filter(course_no=='116') %>%
filter(year=='2017' | year=='2018' | year =='2019') %>%
select(year,term)
test <- df %>%
filter(dept_abbrev=='MUSIC') %>%
filter(course_no=='116') %>%
filter(year=='2017' | year=='2018' | year =='2019')
test <- df %>%
filter(dept_abbrev=='MUSIC') %>%
filter(course_no=='116') %>%
filter(year=='2017' | year=='2018' | year =='2019') %>%
select(year,term, course_code, student_count, A, Am, avg_gpa, lastname,professor_rating)
test <- df %>%
filter(dept_abbrev=='MUSIC') %>%
filter(course_no=='116') %>%
filter(year=='2017' | year=='2018' | year =='2019') %>%
select(year,term, course_code, student_count, A, Aminus, avg_gpa, lastname,professor_rating)
test <- df %>%
filter(dept_abbrev=='MUSIC') %>%
filter(course_no=='116') %>%
filter(year=='2017' | year=='2018' | year =='2019') %>%
select(year,term, course_code, student_count, A, Aminus, avg_gpa, lastname,professor_rating) %>%
mutate(A_percentage=as.numeric(A)/as.numeric(student_count)) %>%
mutate(Aminus_percentage=as.numeric(Aminus)/as.numeric(student_count))
test <- df %>%
filter(dept_abbrev=='MUSIC') %>%
filter(course_no=='116') %>%
filter(year=='2017' | year=='2018' | year =='2019') %>%
select(year,term, course_code, student_count, A, Aminus, avg_gpa, lastname,professor_rating) %>%
mutate(A_percentage=round(as.numeric(A)/as.numeric(student_count) *100,1)) %>%
mutate(Aminus_percentage=round.(as.numeric(Aminus)/as.numeric(student_count) *100,2))
test <- df %>%
filter(dept_abbrev=='MUSIC') %>%
filter(course_no=='116') %>%
filter(year=='2017' | year=='2018' | year =='2019') %>%
select(year,term, course_code, student_count, A, Aminus, avg_gpa, lastname,professor_rating) %>%
mutate(A_percentage=round(as.numeric(A)/as.numeric(student_count) *100,1)) %>%
mutate(Aminus_percentage=round(as.numeric(Aminus)/as.numeric(student_count) *100,2))
test <- df %>%
filter(dept_abbrev=='MUSIC') %>%
filter(course_no=='116') %>%
filter(year=='2017' | year=='2018' | year =='2019') %>%
select(year,term, course_code, student_count, A, Aminus, avg_gpa) %>%
mutate(A_percentage=round(as.numeric(A)/as.numeric(student_count) *100,1)) %>%
mutate(Aminus_percentage=round(as.numeric(Aminus)/as.numeric(student_count) *100,2))
test <- df %>%
filter(dept_abbrev=='MUSIC') %>%
filter(course_no=='116') %>%
filter(year=='2017' | year=='2018' | year =='2019') %>%
select(year,term, course_code, student_count, A, Aminus, avg_gpa) %>%
mutate(A_percentage=paste0(toString(round(as.numeric(A)/as.numeric(student_count) *100,1)),'%')) %>%
mutate(Aminus_percentage=round(as.numeric(Aminus)/as.numeric(student_count) *100,2))
test <- df %>%
filter(dept_abbrev=='MUSIC') %>%
filter(course_no=='116') %>%
filter(year=='2017' | year=='2018' | year =='2019') %>%
select(year,term, course_code, student_count, A, Aminus, avg_gpa) %>%
mutate(A_percentage=round(as.numeric(A) / as.numeric(student_count) *100,1)) %>%
mutate(Aminus_percentage=round(as.numeric(Aminus)/as.numeric(student_count) *100,2))
test <- df %>%
filter(dept_abbrev=='MUSIC') %>%
filter(course_no=='116') %>%
filter(year=='2017' | year=='2018' | year =='2019') %>%
select(year,term, course_code, student_count, A, Aminus, avg_gpa) %>%
mutate(GPA4.0=round(as.numeric(A) / as.numeric(student_count) *100,1)) %>%
mutate(Aminus_percentage=round(as.numeric(Aminus)/as.numeric(student_count) *100,2))
test <- df %>%
filter(dept_abbrev=='MUSIC') %>%
filter(course_no=='116') %>%
filter(year=='2017' | year=='2018' | year =='2019') %>%
select(year,term, course_code, student_count, A, Aminus, avg_gpa) %>%
mutate(GPA4.0比例=round(as.numeric(A) / as.numeric(student_count) *100,1)) %>%
mutate(Aminus_percentage=round(as.numeric(Aminus)/as.numeric(student_count) *100,2))
test <- df %>%
filter(dept_abbrev=='MUSIC') %>%
filter(course_no=='116') %>%
filter(year=='2017' | year=='2018' | year =='2019') %>%
select(year,term, course_code, student_count, A, Aminus, avg_gpa) %>%
mutate(GPA4.0比例=round(as.numeric(A) / as.numeric(student_count) *100,1)) %>%
mutate(GPA3.5以上比例=round(as.numeric(Aminus)/as.numeric(student_count) *100,2))
test <- df %>%
filter(dept_abbrev=='MUSIC') %>%
filter(course_no=='185') %>%
filter(year=='2017' | year=='2018' | year =='2019') %>%
select(year,term, course_code, student_count, A, Aminus, avg_gpa) %>%
mutate(GPA4.0比例=round(as.numeric(A) / as.numeric(student_count) *100,1)) %>%
mutate(GPA3.5以上比例=round(as.numeric(Aminus)/as.numeric(student_count) *100,2))
my <- read.csv('response_history.csv', stringsAsFactors = F)
View(my)
good <- my %>%
filter(Presenter=='laurenkathle814')
View(good)
source('~/Desktop/info/uwgpa/boxplot_chart.R')
